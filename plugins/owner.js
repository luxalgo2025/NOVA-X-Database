const { cmd } = require("../lib/command");

cmd({
  pattern: "owner",
  react: "üìá",
  desc: "Send owner contacts as vCards + detailed info message separately for each contact",
  category: "general",
  filename: __filename,
}, async (conn, mek, m) => {
  try {
    const contacts = [
      {
        name: "ùôºùöÅ.ùöÇùô∞ùôΩùô≥ùô¥ùöÇùô∑ ùô±ùô∑ùô∞ùöÇùô∑ùô∞ùôΩùô∞",
        number: "94741259325",
        info: `
*ùêéùêñùêçùêÑùêë ùêàùêçùêÖùêéùêëùêåùêÄùêìùêàùêéùêç*

üë§ *Name:* Sandesh Bhashana
üì± *Number:* +94 74 741 6478
üåê *Website:* https://sandesh-md.example
üíº *Role:* Bot Developer & Owner
‚úâÔ∏è *Email:* sandesh@example.com
üìç *Location:* Sri Lanka
üìå *Additional Info:* Always online, managing the bot and its plugins.

> *NOVA-X MD BOT*
`
      },
      {
        name: "ùôºùöÅ.ùôøùô∞ùöÉùô∑ùöÑùôº ùôºùô∞ùôªùöÇùô∞ùöÅùô∞",
        number: "94723975388",
        info: `
*ùêéùêñùêçùêÑùêë ùêàùêçùêÖùêéùêëùêåùêÄùêìùêàùêéùêç*

üë§ *Name:* Pathum Malsara
üì± *Number:* +94 72 397 5388
üåê *Website:* https://pathum-md.example
üíº *Role:* Co-Owner & Developer
‚úâÔ∏è *Email:* pathum@example.com
üìç *Location:* Sri Lanka
üìå *Additional Info:* Oversees bot updates and development.

> *NOVA-X MD BOT*
`
      }
    ];

    for (let contact of contacts) {
      // Send vCard
      const vcard = `BEGIN:VCARD
VERSION:3.0
FN:${contact.name}
ORG:NOVA-X MD;
TEL;type=CELL;type=VOICE;waid=${contact.number}:${contact.number}
END:VCARD`;

      await conn.sendMessage(
        m.chat,
        {
          contacts: {
            displayName: contact.name,
            contacts: [{ vcard }],
          },
        },
        { quoted: mek }
      );

      await new Promise(resolve => setTimeout(resolve, 500)); // avoid rate limits

      // Send detailed info as separate reply
      await conn.sendMessage(m.chat, { text: contact.info }, { quoted: mek });

      await new Promise(resolve => setTimeout(resolve, 500));
    }

  } catch (err) {
    console.log(err);
    m.reply("‚ùå Error sending owner information!");
  }
});
